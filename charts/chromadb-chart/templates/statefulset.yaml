apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  serviceName: "{{ include "chart.fullname" . }}"
  podManagementPolicy: "Parallel" # This setting means that the StatefulSet controller doesn't block applying changes until the existing Pod is READY.
  replicas: 1
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
    spec:
      securityContext: {{ toYaml .Values.podSpec.securityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.podSpec.terminationGracePeriodSeconds }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: "chromadb"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IS_PERSISTENT
              value: "{{ .Values.chromadb.isPersistent }}"
            - name: PERSIST_DIRECTORY
              value: "{{ .Values.chromadb.persistDirectory }}"
            - name: ALLOW_RESET
              value: "{{ .Values.chromadb.allowReset | default "false" }}"
            - name: CHROMA_SERVER_LOG_CONFIG
              value: "log_config.yaml"
            - name: ANONYMIZED_TELEMETRY
              value: "{{ .Values.chromadb.anonymizedTelemetry | default "false" }}"
            {{- if .Values.chromadb.corsAllowOrigins }}
            - name: CHROMA_SERVER_CORS_ALLOW_ORIGINS
              value: '{{ .Values.chromadb.corsAllowOrigins | join "\",\"" | printf "[\"%s\"]"}}'
            {{- end }}
            {{- if .Values.chromadb.apiImpl }}
            - name: CHROMA_API_IMPL
              value: "{{ .Values.chromadb.apiImpl }}"
            {{- end }}
            {{- if .Values.chromadb.serverHost }}
            - name: CHROMA_SERVER_HOST
              value: "{{ .Values.chromadb.serverHost }}"
            {{- end }}
            {{- if .Values.chromadb.serverHttpPort }}
            - name: CHROMA_SERVER_HTTP_PORT
              value: "{{ .Values.chromadb.serverHttpPort }}"
            {{- end }}
          ports:
            - containerPort: {{ .Values.chromadb.serverHttpPort }}
              name: http
          resources:
            {{- if .Values.resources.requests }}
            requests: {{ .Values.resources.requests | toYaml | nindent 14 }}
            {{- end }}
            {{- if .Values.resources.limits }}
            limits: {{ .Values.resources.requests | toYaml | nindent 14 }}
            {{- end }}
          securityContext: {{ .Values.podSpec.securityContext | toYaml  | nindent 14 }}
          volumeMounts:
            - mountPath: /chroma/log_config.yaml
              name: log-config
              subPath: log_config.yaml
            - mountPath: "/index_data"
              name: data
          readinessProbe:
            tcpSocket:
              port: {{ .Values.chromadb.serverHttpPort }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.chromadb.serverHttpPort }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          startupProbe:
            tcpSocket:
              port: {{ .Values.chromadb.serverHttpPort }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
      volumes:
        - name: log-config
          configMap:
            name: "{{ include "chart.fullname" . }}-log-config"
            defaultMode: 0644
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 1Gi


